import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class ATMInterface {
    private static String accountNumber = "123456789";
    private static String pin = "1234";
    private static double balance = 1000.0;
    private static List<String> transactionHistory = new ArrayList<>();

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        boolean isLoggedIn = false;

        System.out.println("Welcome to the ATM!");

        while (true) {
            System.out.print("Enter your account number: ");
            String inputAccountNumber = scanner.nextLine();

            System.out.print("Enter your PIN: ");
            String inputPin = scanner.nextLine();

            if (inputAccountNumber.equals(accountNumber) && inputPin.equals(pin)) {
                isLoggedIn = true;
                break;
            } else {
                System.out.println("Invalid account number or PIN. Please try again.");
            }
        }

        while (isLoggedIn) {
            System.out.println("\n===== ATM Menu =====");
            System.out.println("1. Check Balance");
            System.out.println("2. Deposit");
            System.out.println("3. Withdraw");
            System.out.println("4. Transfer");
            System.out.println("5. Transaction History");
            System.out.println("6. Quit");
            System.out.println("====================");

            System.out.print("Enter your choice: ");
            int choice = Integer.parseInt(scanner.nextLine());

            switch (choice) {
                case 1:
                    System.out.println("Your balance is: $" + balance);
                    break;
                case 2:
                    System.out.print("Enter the amount to deposit: $");
                    double depositAmount = Double.parseDouble(scanner.nextLine());
                    deposit(depositAmount);
                    break;
                case 3:
                    System.out.print("Enter the amount to withdraw: $");
                    double withdrawAmount = Double.parseDouble(scanner.nextLine());
                    withdraw(withdrawAmount);
                    break;
                case 4:
                    System.out.print("Enter the recipient's account number: ");
                    String recipientAccountNumber = scanner.nextLine();
                    System.out.print("Enter the amount to transfer: $");
                    double transferAmount = Double.parseDouble(scanner.nextLine());
                    transfer(recipientAccountNumber, transferAmount);
                    break;
                case 5:
                    displayTransactionHistory();
                    break;
                case 6:
                    isLoggedIn = false;
                    System.out.println("Logged out successfully. Thank you for using our ATM!");
                    break;
                default:
                    System.out.println("Invalid choice. Please select a valid option.");
            }
        }

        scanner.close();
    }

    private static void deposit(double amount) {
        balance += amount;
        String transaction = "Deposited $" + amount + ", New Balance: $" + balance;
        transactionHistory.add(transaction);
        System.out.println("Deposit successful. Your new balance is: $" + balance);
    }

    private static void withdraw(double amount) {
        if (amount <= balance) {
            balance -= amount;
            String transaction = "Withdrawn $" + amount + ", New Balance: $" + balance;
            transactionHistory.add(transaction);
            System.out.println("Withdrawal successful. Your new balance is: $" + balance);
        } else {
            System.out.println("Insufficient funds. Withdrawal canceled.");
        }
    }

    private static void transfer(String recipientAccountNumber, double amount) {
        if (amount <= balance) {
            balance -= amount;
            String transaction = "Transferred $" + amount + " to account " + recipientAccountNumber + ", New Balance: $" + balance;
            transactionHistory.add(transaction);
            System.out.println("Transfer successful. Your new balance is: $" + balance);
        } else {
            System.out.println("Insufficient funds. Transfer canceled.");
        }
    }

    private static void displayTransactionHistory() {
        System.out.println("\n===== Transaction History =====");
        for (String transaction : transactionHistory) {
            System.out.println(transaction);
        }
        System.out.println("===============================");
    }
}
